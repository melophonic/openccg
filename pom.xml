<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<!-- 
		the openccg core component build
		builds to $OPENCCG_HOME/lib/openccg.jar 
		
		NOTE: build from the parent pom first: mvn -f parent.pom.xml
	-->

	<artifactId>openccg</artifactId>

	<parent>
		<groupId>opennlp.ccg</groupId>
		<artifactId>openccg-parent</artifactId>
		<version>0.9.6-SNAPSHOT</version>
		<relativePath>parent.pom.xml</relativePath>
	</parent>

	<properties>
		<jar.name>openccg</jar.name>
	</properties>

	<build>
		<finalName>${jar.name}</finalName>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>
		<resources>
			<resource>
				<directory>src</directory>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/.backup.orig/**</exclude>
					<exclude>kenlm/**</exclude>
					<exclude>ccg2xml/*</exclude>
					<exclude>srilmbridge/**</exclude>
				</excludes>
			</resource>
			<!-- 
			<resource>
				<directory>grammars</directory>
				<excludes>
					<exclude>*.xsl</exclude>
					<exclude>*.xsd</exclude>
				</excludes>
			</resource>
			 -->
		</resources>
		<testResources>
			<testResource>
				<directory>test</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<includes>
						<include>opennlp/**/*.java</include>
						<!-- <include>plugins/**/*.java</include> -->
					</includes>						
				</configuration>
			</plugin>		

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>copy-jar</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- copy the jar to the location referenced by ant -->
								<copy file="${project.build.directory}/${jar.name}.jar" tofile="lib/${jar.name}.jar" overwrite="true"/>
							</target>
						</configuration>
					</execution>					
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javacc-maven-plugin</artifactId>
				<configuration>
					<sourceDirectory>${project.build.sourceDirectory}/opennlp/ccgbank/parse</sourceDirectory>
					<nodeClass>opennlp.ccgbank.parse.SimpleNode</nodeClass>
				</configuration>
				<executions>
					<execution>
						<id>jjtree-javacc</id>
						<goals>
							<goal>jjtree-javacc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/jjtree</source>
								<source>${project.build.directory}/generated-sources/javacc</source>
								<!-- <source>ccgbank</source> -->
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom</artifactId>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>serializer</artifactId>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>		

		<dependency>
			<groupId>net.sf.jopt-simple</groupId>
			<artifactId>jopt-simple</artifactId>
		</dependency>
		<dependency>
			<groupId>jline</groupId>
			<artifactId>jline</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.jgrapht</groupId>
			<artifactId>jgrapht</artifactId>
		</dependency>
		<dependency>
			<groupId>javacc</groupId>
			<artifactId>javacc</artifactId>
		</dependency>
		<dependency>
			<groupId>ant</groupId>
			<artifactId>ant-junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant-junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.trove4j</groupId>
			<artifactId>trove4j</artifactId>
		</dependency>
		<dependency>
			<groupId>edu.berkeley.nlp.lm</groupId>
			<artifactId>berkleylm</artifactId>
		</dependency>		
	</dependencies>	

</project>